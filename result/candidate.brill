    call proc_main
    halt
proc_hamlet:
# prologue
    push_stack_frame 2
    store 0, r0
    int_const r0, 0
    store 1, r0
# assignment
    load r0, 0
    int_const r1, 1
    sub_int r0, r0, r1
    store 1, r0
# if
    load r0, 0
    int_const r1, 0
    cmp_ge_int r0, r0, r1
    branch_on_false r0, label0
# if
    load r0, 0
    int_const r1, 2
    div_int r0, r0, r1
    int_const r1, 0
    cmp_eq_int r0, r0, r1
    branch_on_false r0, label1
# write
    string_const r0, "to be\n"
    call_builtin print_string
    branch_uncond label2
label1:
# else
# write
    string_const r0, "not to be\n"
    call_builtin print_string
label2:
# proc call
    load r0, 1
    call proc_hamlet
label0:
# epilogue
    pop_stack_frame 2
    return
    
proc_donate_ram:
# prologue
    push_stack_frame 2
    store 0, r0
    int_const r0, 0
    store 1, r0
# if
    load r0, 0
    load r1, 0
    cmp_lt_int r0, r0, r1
    branch_on_false r0, label3
# assignment
    int_const r0, 1
    store 1, r0
    branch_uncond label4
label3:
# else
# assignment
    int_const r0, 0
    store 1, r0
label4:
# write
    load r0, 0
    load r1, 1
    int_const r2, 1
    add_int r1, r1, r2
    div_int r0, r0, r1
    call_builtin print_int
# epilogue
    pop_stack_frame 2
    return
    
proc_main:
# prologue
    push_stack_frame 1
    int_const r0, 0
    store 0, r0
# read
    call_builtin read_int
    store 0, r0
# proc call
    load r0, 0
    call proc_hamlet
# proc call
    load r0, 0
    call proc_donate_ram
# epilogue
    pop_stack_frame 1
    return
    
