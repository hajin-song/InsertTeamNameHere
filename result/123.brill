    call proc_main
    halt
proc_f:
# prologue
    push_stack_frame 37
    store 0, r0
    store 1, r1
    int_const r0, 0
    store 2, r0
    real_const r0, 0.0
    store 3, r0
    int_const r0, 0
    store 4, r0
    int_const r0, 0
    store 5, r0
    store 6, r0
    store 7, r0
    store 8, r0
    store 9, r0
    store 10, r0
    store 11, r0
    store 12, r0
    store 13, r0
    store 14, r0
    store 15, r0
    store 16, r0
    store 17, r0
    store 18, r0
    store 19, r0
    store 20, r0
    store 21, r0
    store 22, r0
    store 23, r0
    store 24, r0
    store 25, r0
    store 26, r0
    store 27, r0
    store 28, r0
    store 29, r0
    store 30, r0
    store 31, r0
    store 32, r0
    store 33, r0
    store 34, r0
    store 35, r0
    store 36, r0
# assignment
    int_const r0, 42
    load r1, 0
    store_indirect r1, r0
# assignment
    int_const r0, 1
    load_address r1, 5
    int_const r2, 1
    int_const r3, 1
    sub_int r2, r2, r3
    int_const r3, 1
    int_const r4, 1
    sub_int r3, r3, r4
    int_const r4, 1
    mul_int r3, r3, r4
    mul_int r2, r2, r3
    sub_offset r1, r1, r2
    store_indirect r1, r0
# assignment
    int_const r0, 1
    int_const r1, 2
    div_int r0, r0, r1
    int_const r1, 3
    int_const r2, 4
    mul_int r1, r1, r2
    add_int r0, r0, r1
    store 2, r0
# assignment
    int_const r0, 1
    int_const r1, 2
    add_int r0, r0, r1
    int_const r1, 3
    mul_int r0, r0, r1
    int_const r1, -1
    mul_int r0, r0, r1
    store 2, r0
# assignment
    real_const r0, 1.111000
    real_const r1, 2.222000
    add_real r0, r0, r1
    store 3, r0
# assignment
    int_const r0, 1
    not r0, r0
    store 4, r0
# assignment
    load r0, 4
    load r1, 4
    or r0, r0, r1
    load r1, 4
    not r1, r1
    load r2, 4
    cmp_ne_int r1, r1, r2
    and r0, r0, r1
    store 4, r0
# write
    string_const r0, "Hello world"
    call_builtin print_string
# if
    load r0, 4
    int_const r1, 1
    int_const r2, 1
    cmp_eq_int r1, r1, r2
    and r0, r0, r1
    branch_on_false r0, label0
# while
label2:
    load r0, 4
    branch_on_false r0, label3
# assignment
    int_const r0, 0
    store 4, r0
    branch_uncond label2
label3:
    branch_uncond label1
label0:
# else
# assignment
    int_const r0, 0
    store 4, r0
label1:
# epilogue
    pop_stack_frame 37
    return
    
proc_g:
# prologue
    push_stack_frame 1
    store 0, r0
# assignment
    load r0, 0
    load_indirect r0, r0
    int_const r1, 1
    add_int r0, r0, r1
    load r1, 0
    store_indirect r1, r0
# epilogue
    pop_stack_frame 1
    return
    
proc_main:
# prologue
    push_stack_frame 1
    int_const r0, 0
    store 0, r0
# read
    call_builtin read_int
    store 0, r0
# proc call
    load_address r0, 0
    call proc_g
# proc call
    load_address r0, 0
    load r1, 0
    int_to_real r1, r1
    call proc_f
# epilogue
    pop_stack_frame 1
    return
    
